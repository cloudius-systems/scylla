#!/usr/bin/python2
# -*- coding: utf-8 -*-
#
# Copyright 2018 ScyllaDB
#

#
# This file is part of Scylla.
#
# Scylla is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Scylla is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Scylla.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import glob
import re
import shutil
import shlex
import tarfile
import argparse
import subprocess
import os.path

def run(cmd, shell=False):
    if not shell:
        cmd = shlex.split(cmd)
    return subprocess.check_call(cmd, shell=shell)

def get_kver(pattern):
    for k in glob.glob(pattern):
        return re.sub(r'^/boot/vmlinuz-(.+)$', r'\1', k)

if __name__ == '__main__':
    if os.getuid() > 0:
        print('Requires root permission.')
        sys.exit(1)

    homedir = os.path.abspath(os.path.join(__file__, os.pardir))

    parser = argparse.ArgumentParser(description='Construct AMI')
    parser.add_argument('--localrpm', action='store_true', default=False,
                        help='deploy locally built rpms')
    parser.add_argument('--repo',
                        help='repository for both install and update, specify .repo/.list file URL')
    parser.add_argument('--repo-for-install',
                        help='repository for install, specify .repo/.list file URL')
    parser.add_argument('--repo-for-update',
                        help='repository for update, specify .repo/.list file URL')
    args = parser.parse_args()

    if args.repo:
        args.repo_for_install = args.repo_for_update = args.repo

    if not args.localrpm and not args.repo_for_install:
        print('Error: need to specify --localrpm or --repo/--repo-for-install')
        sys.exit(1)

    run('yum update -y')

    if args.repo_for_install:
        run('curl -L -o /etc/yum.repos.d/scylla_install.repo {REPO_FOR_INSTALL}'.format(REPO_FOR_INSTALL=args.repo_for_install))

    if args.localrpm:
        rpms = glob.glob('{}/scylla*.*.rpm'.format(homedir))
        run('yum install -y {}'.format(' '.join(rpms)))
    else:
        run('yum install -y scylla-ami scylla-debuginfo')

    if args.repo_for_install:
        os.remove('/etc/yum.repos.d/scylla_install.repo')
    if args.repo_for_update:
        run('curl -L -o /etc/yum.repos.d/scylla.repo {REPO_FOR_UPDATE}'.format(REPO_FOR_UPDATE=args.repo_for_update))

    run('systemctl daemon-reload')
    run('systemctl enable scylla-ami-setup.service')
    with open('/etc/cloud/cloud.cfg') as f:
        lines = f.readlines()
    with open('/etc/cloud/cloud.cfg', 'w') as f:
        for l in lines:
            if re.match(r'^    name: ec2-user\n$', l):
                f.write('    name: scyllaadm\n')
                continue
            if not re.match(r'^ - mounts\n$', l):
                f.write(l)
    run('/opt/scylladb/scripts/scylla_setup --ntp-domain amazon --no-coredump-setup --no-sysconfig-setup --no-raid-setup --no-io-setup --no-bootparam-setup --no-ec2-check')
    run('/opt/scylladb/scripts/scylla_sysconfig_setup --ami')
    run('/opt/scylladb/scripts/scylla_bootparam_setup --ami')
    os.remove('{}/.ssh/authorized_keys'.format(homedir))
    os.remove('/var/lib/scylla-housekeeping/housekeeping.uuid')

    with open('/etc/cloud/cloud.cfg') as f:
        cfg = f.read()
    cfg2 = re.sub('^ssh_deletekeys:   false', 'ssh_deletekeys:   true', cfg, flags=re.MULTILINE)
    with open('/etc/cloud/cloud.cfg', 'w') as f:
        f.write(cfg2)
    shutil.move('{}/99_user_alias.cfg'.format(homedir), '/etc/cloud/cloud.cfg.d')
