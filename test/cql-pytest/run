#!/usr/bin/env python3

import sys

import run   # run.py in this directory

print('Scylla is: ' + run.find_scylla() + '.')

ssl = '--ssl' in sys.argv
if ssl:
    cmd = run.run_scylla_ssl_cql_cmd
    check_cql = run.check_ssl_cql
else:
    cmd = run.run_scylla_cmd
    check_cql = run.check_cql

if "-h" in sys.argv or "--help" in sys.argv:
    run.run_pytest(sys.path[0], sys.argv)
    exit(0)

run.omit_scylla_output = "--omit-scylla-output" in sys.argv

pid = run.run_with_temporary_dir(cmd)
ip = run.pid_to_ip(pid)

run.wait_for_services(pid, [
    lambda: run.check_rest_api(ip),
    lambda: check_cql(ip)
])

args = ['--host=' + ip]
if not any(map(lambda x: x.startswith('--replication'), sys.argv)):
    # The default for --replication is "all". To faciliate iterative
    # development, with short compile+test cycles, we only run the test with
    # --replication=tablets, when running them via 'run'.
    # If the user already provided this option, don't overwrite it.
    args.append('--replication=tablets')

success = run.run_pytest(sys.path[0], args + sys.argv[1:])

run.summary = 'Scylla tests pass' if success else 'Scylla tests failure'

exit(0 if success else 1)

# Note that the run.cleanup_all() function runs now, just like on any exit
# for any reason in this script. It will delete the temporary files and
# announce the failure or success of the test (printing run.summary).
